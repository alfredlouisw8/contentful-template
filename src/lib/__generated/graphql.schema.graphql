directive @contentSourceMaps on QUERY

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  componentAuthorCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentAuthorCollection
  componentRichImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentRichImageCollection
  componentSeoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSeoCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ImagesCollection
  packagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PackagesCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageBlogPostCollection
  portfoliosCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PortfoliosCollection
  quizAnswerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): QuizAnswerCollection
  specialDealsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SpecialDealsCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
To have author-related properties [See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/componentAuthor)
"""
type ComponentAuthor implements Entry & _Node {
  _id: ID!
  avatar(locale: String, preview: Boolean): Asset
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentAuthorLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type ComponentAuthorCollection {
  items: [ComponentAuthor]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentAuthorFilter {
  AND: [ComponentAuthorFilter]
  OR: [ComponentAuthorFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type ComponentAuthorLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentAuthorLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
}

enum ComponentAuthorLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentAuthorOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To describe an image used in rich text fields [See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/componentRichImage)
"""
type ComponentRichImage implements Entry & _Node {
  _id: ID!
  caption(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentRichImageLinkingCollections
  sys: Sys!
}

type ComponentRichImageCollection {
  items: [ComponentRichImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentRichImageFilter {
  AND: [ComponentRichImageFilter]
  OR: [ComponentRichImageFilter]
  caption: String
  caption_contains: String
  caption_exists: Boolean
  caption_in: [String]
  caption_not: String
  caption_not_contains: String
  caption_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

type ComponentRichImageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentRichImageOrder {
  caption_ASC
  caption_DESC
  fullWidth_ASC
  fullWidth_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To have SEO-related properties to the pages we render [See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/componentSeo)
"""
type ComponentSeo implements Entry & _Node {
  _id: ID!
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSeoLinkingCollections
  nofollow(locale: String): Boolean
  noindex(locale: String): Boolean
  pageDescription(locale: String): String
  pageTitle(locale: String): String
  shareImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  sys: Sys!
}

type ComponentSeoCollection {
  items: [ComponentSeo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSeoFilter {
  AND: [ComponentSeoFilter]
  OR: [ComponentSeoFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

type ComponentSeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
}

enum ComponentSeoLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentSeoLinkingCollectionsPageLandingCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentSeoOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  internalName_ASC
  internalName_DESC
  nofollow_ASC
  nofollow_DESC
  noindex_ASC
  noindex_DESC
  pageTitle_ASC
  pageTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  concepts: [TaxonomyConcept]!
  tags: [ContentfulTag]!
}

input ContentfulMetadataConceptsDescendantsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataConceptsFilter {
  descendants: ContentfulMetadataConceptsDescendantsFilter
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataFilter {
  concepts: ContentfulMetadataConceptsFilter
  concepts_exists: Boolean
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/images)
"""
type Images implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  dealsImage(locale: String, preview: Boolean): Asset
  homeImage(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): ImagesLinkingCollections
  loveProfileImage(locale: String, preview: Boolean): Asset
  packagesImage(locale: String, preview: Boolean): Asset
  portfoliosImage(locale: String, preview: Boolean): Asset
  sys: Sys!
  title(locale: String): String
}

type ImagesCollection {
  items: [Images]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ImagesFilter {
  AND: [ImagesFilter]
  OR: [ImagesFilter]
  contentfulMetadata: ContentfulMetadataFilter
  dealsImage_exists: Boolean
  homeImage_exists: Boolean
  loveProfileImage_exists: Boolean
  packagesImage_exists: Boolean
  portfoliosImage_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ImagesLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ImagesOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/packages)
"""
type Packages implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): PackagesDescription
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): PackagesLinkingCollections
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PackagesCollection {
  items: [Packages]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PackagesDescription {
  json: JSON!
  links: PackagesDescriptionLinks!
}

type PackagesDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PackagesDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PackagesDescriptionLinks {
  assets: PackagesDescriptionAssets!
  entries: PackagesDescriptionEntries!
  resources: PackagesDescriptionResources!
}

type PackagesDescriptionResources {
  block: [PackagesDescriptionResourcesBlock!]!
  hyperlink: [PackagesDescriptionResourcesHyperlink!]!
  inline: [PackagesDescriptionResourcesInline!]!
}

type PackagesDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PackagesDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PackagesDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PackagesFilter {
  AND: [PackagesFilter]
  OR: [PackagesFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  image_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PackagesLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PackagesOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
To create individual blog posts [See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/pageBlogPost)
"""
type PageBlogPost implements Entry & _Node {
  _id: ID!
  author(locale: String, preview: Boolean, where: ComponentAuthorFilter): ComponentAuthor
  content(locale: String): PageBlogPostContent
  contentfulMetadata: ContentfulMetadata!
  featuredImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageBlogPostLinkingCollections
  publishedDate(locale: String): DateTime
  relatedBlogPostsCollection(limit: Int = 100, locale: String, order: [PageBlogPostRelatedBlogPostsCollectionOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostRelatedBlogPostsCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  shortDescription(locale: String): String
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PageBlogPostCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageBlogPostContent {
  json: JSON!
  links: PageBlogPostContentLinks!
}

type PageBlogPostContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageBlogPostContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageBlogPostContentLinks {
  assets: PageBlogPostContentAssets!
  entries: PageBlogPostContentEntries!
  resources: PageBlogPostContentResources!
}

type PageBlogPostContentResources {
  block: [PageBlogPostContentResourcesBlock!]!
  hyperlink: [PageBlogPostContentResourcesHyperlink!]!
  inline: [PageBlogPostContentResourcesInline!]!
}

type PageBlogPostContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PageBlogPostFilter {
  AND: [PageBlogPostFilter]
  OR: [PageBlogPostFilter]
  author: cfComponentAuthorNestedFilter
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedBlogPosts: cfPageBlogPostNestedFilter
  relatedBlogPostsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageBlogPostLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageBlogPostLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
}

enum PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageBlogPostLinkingCollectionsPageLandingCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageBlogPostOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageBlogPostRelatedBlogPostsCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageBlogPostRelatedBlogPostsCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
To have an entry point for the app (e.g. Homepage) [See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/pageLanding)
"""
type PageLanding implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  featuredBlogPost(locale: String, preview: Boolean, where: PageBlogPostFilter): PageBlogPost
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLandingLinkingCollections
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  sys: Sys!
}

type PageLandingCollection {
  items: [PageLanding]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageLandingFilter {
  AND: [PageLandingFilter]
  OR: [PageLandingFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredBlogPost: cfPageBlogPostNestedFilter
  featuredBlogPost_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  sys: SysFilter
}

type PageLandingLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageLandingOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/portfolios)
"""
type Portfolios implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): PortfoliosDescription
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): PortfoliosLinkingCollections
  shortDescription(locale: String): String
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
  youtube(locale: String): String
}

type PortfoliosCollection {
  items: [Portfolios]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PortfoliosDescription {
  json: JSON!
  links: PortfoliosDescriptionLinks!
}

type PortfoliosDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PortfoliosDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PortfoliosDescriptionLinks {
  assets: PortfoliosDescriptionAssets!
  entries: PortfoliosDescriptionEntries!
  resources: PortfoliosDescriptionResources!
}

type PortfoliosDescriptionResources {
  block: [PortfoliosDescriptionResourcesBlock!]!
  hyperlink: [PortfoliosDescriptionResourcesHyperlink!]!
  inline: [PortfoliosDescriptionResourcesInline!]!
}

type PortfoliosDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PortfoliosDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PortfoliosDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PortfoliosFilter {
  AND: [PortfoliosFilter]
  OR: [PortfoliosFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  image_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  youtube: String
  youtube_contains: String
  youtube_exists: Boolean
  youtube_in: [String]
  youtube_not: String
  youtube_not_contains: String
  youtube_not_in: [String]
}

type PortfoliosLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PortfoliosOrder {
  shortDescription_ASC
  shortDescription_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
  youtube_ASC
  youtube_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  componentAuthor(id: String!, locale: String, preview: Boolean): ComponentAuthor
  componentAuthorCollection(limit: Int = 100, locale: String, order: [ComponentAuthorOrder], preview: Boolean, skip: Int = 0, where: ComponentAuthorFilter): ComponentAuthorCollection
  componentRichImage(id: String!, locale: String, preview: Boolean): ComponentRichImage
  componentRichImageCollection(limit: Int = 100, locale: String, order: [ComponentRichImageOrder], preview: Boolean, skip: Int = 0, where: ComponentRichImageFilter): ComponentRichImageCollection
  componentSeo(id: String!, locale: String, preview: Boolean): ComponentSeo
  componentSeoCollection(limit: Int = 100, locale: String, order: [ComponentSeoOrder], preview: Boolean, skip: Int = 0, where: ComponentSeoFilter): ComponentSeoCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  images(id: String!, locale: String, preview: Boolean): Images
  imagesCollection(limit: Int = 100, locale: String, order: [ImagesOrder], preview: Boolean, skip: Int = 0, where: ImagesFilter): ImagesCollection
  packages(id: String!, locale: String, preview: Boolean): Packages
  packagesCollection(limit: Int = 100, locale: String, order: [PackagesOrder], preview: Boolean, skip: Int = 0, where: PackagesFilter): PackagesCollection
  pageBlogPost(id: String!, locale: String, preview: Boolean): PageBlogPost
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostCollection
  pageLanding(id: String!, locale: String, preview: Boolean): PageLanding
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageLandingOrder], preview: Boolean, skip: Int = 0, where: PageLandingFilter): PageLandingCollection
  portfolios(id: String!, locale: String, preview: Boolean): Portfolios
  portfoliosCollection(limit: Int = 100, locale: String, order: [PortfoliosOrder], preview: Boolean, skip: Int = 0, where: PortfoliosFilter): PortfoliosCollection
  quiz(id: String!, locale: String, preview: Boolean): Quiz
  quizAnswer(id: String!, locale: String, preview: Boolean): QuizAnswer
  quizAnswerCollection(limit: Int = 100, locale: String, order: [QuizAnswerOrder], preview: Boolean, skip: Int = 0, where: QuizAnswerFilter): QuizAnswerCollection
  quizCollection(limit: Int = 100, locale: String, order: [QuizOrder], preview: Boolean, skip: Int = 0, where: QuizFilter): QuizCollection
  specialDeals(id: String!, locale: String, preview: Boolean): SpecialDeals
  specialDealsCollection(limit: Int = 100, locale: String, order: [SpecialDealsOrder], preview: Boolean, skip: Int = 0, where: SpecialDealsFilter): SpecialDealsCollection
  tag(id: String!, locale: String, preview: Boolean): Tag
  tagCollection(limit: Int = 100, locale: String, order: [TagOrder], preview: Boolean, skip: Int = 0, where: TagFilter): TagCollection
}

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/quiz)
"""
type Quiz implements Entry & _Node {
  _id: ID!
  answersCollection(limit: Int = 100, locale: String, order: [QuizAnswersCollectionOrder], preview: Boolean, skip: Int = 0, where: QuizAnswerFilter): QuizAnswersCollection
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): QuizLinkingCollections
  order(locale: String): Int
  question(locale: String): String
  sys: Sys!
}

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/quizAnswer)
"""
type QuizAnswer implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): QuizAnswerLinkingCollections
  pdfLongText(locale: String): String
  pdfText(locale: String): QuizAnswerPdfText
  sys: Sys!
  text(locale: String): String
  value(locale: String): String
}

type QuizAnswerCollection {
  items: [QuizAnswer]!
  limit: Int!
  skip: Int!
  total: Int!
}

input QuizAnswerFilter {
  AND: [QuizAnswerFilter]
  OR: [QuizAnswerFilter]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  pdfLongText: String
  pdfLongText_contains: String
  pdfLongText_exists: Boolean
  pdfLongText_in: [String]
  pdfLongText_not: String
  pdfLongText_not_contains: String
  pdfLongText_not_in: [String]
  pdfText_contains: String
  pdfText_exists: Boolean
  pdfText_not_contains: String
  sys: SysFilter
  text: String
  text_contains: String
  text_exists: Boolean
  text_in: [String]
  text_not: String
  text_not_contains: String
  text_not_in: [String]
  value: String
  value_contains: String
  value_exists: Boolean
  value_in: [String]
  value_not: String
  value_not_contains: String
  value_not_in: [String]
}

type QuizAnswerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  quizCollection(limit: Int = 100, locale: String, order: [QuizAnswerLinkingCollectionsQuizCollectionOrder], preview: Boolean, skip: Int = 0): QuizCollection
}

enum QuizAnswerLinkingCollectionsQuizCollectionOrder {
  order_ASC
  order_DESC
  question_ASC
  question_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum QuizAnswerOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  text_ASC
  text_DESC
  value_ASC
  value_DESC
}

type QuizAnswerPdfText {
  json: JSON!
  links: QuizAnswerPdfTextLinks!
}

type QuizAnswerPdfTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type QuizAnswerPdfTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type QuizAnswerPdfTextLinks {
  assets: QuizAnswerPdfTextAssets!
  entries: QuizAnswerPdfTextEntries!
  resources: QuizAnswerPdfTextResources!
}

type QuizAnswerPdfTextResources {
  block: [QuizAnswerPdfTextResourcesBlock!]!
  hyperlink: [QuizAnswerPdfTextResourcesHyperlink!]!
  inline: [QuizAnswerPdfTextResourcesInline!]!
}

type QuizAnswerPdfTextResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type QuizAnswerPdfTextResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type QuizAnswerPdfTextResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type QuizAnswersCollection {
  items: [QuizAnswer]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum QuizAnswersCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  text_ASC
  text_DESC
  value_ASC
  value_DESC
}

type QuizCollection {
  items: [Quiz]!
  limit: Int!
  skip: Int!
  total: Int!
}

input QuizFilter {
  AND: [QuizFilter]
  OR: [QuizFilter]
  answers: cfQuizAnswerNestedFilter
  answersCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  order: Int
  order_exists: Boolean
  order_gt: Int
  order_gte: Int
  order_in: [Int]
  order_lt: Int
  order_lte: Int
  order_not: Int
  order_not_in: [Int]
  question: String
  question_contains: String
  question_exists: Boolean
  question_in: [String]
  question_not: String
  question_not_contains: String
  question_not_in: [String]
  sys: SysFilter
}

type QuizLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum QuizOrder {
  order_ASC
  order_DESC
  question_ASC
  question_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/specialDeals)
"""
type SpecialDeals implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): SpecialDealsDescription
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): SpecialDealsLinkingCollections
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type SpecialDealsCollection {
  items: [SpecialDeals]!
  limit: Int!
  skip: Int!
  total: Int!
}

type SpecialDealsDescription {
  json: JSON!
  links: SpecialDealsDescriptionLinks!
}

type SpecialDealsDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type SpecialDealsDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type SpecialDealsDescriptionLinks {
  assets: SpecialDealsDescriptionAssets!
  entries: SpecialDealsDescriptionEntries!
  resources: SpecialDealsDescriptionResources!
}

type SpecialDealsDescriptionResources {
  block: [SpecialDealsDescriptionResourcesBlock!]!
  hyperlink: [SpecialDealsDescriptionResourcesHyperlink!]!
  inline: [SpecialDealsDescriptionResourcesInline!]!
}

type SpecialDealsDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type SpecialDealsDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type SpecialDealsDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input SpecialDealsFilter {
  AND: [SpecialDealsFilter]
  OR: [SpecialDealsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  image_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type SpecialDealsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum SpecialDealsOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
[See type definition](https://app.contentful.com/spaces/0zhpahbse7h4/content_types/tag)
"""
type Tag implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): TagLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type TagCollection {
  items: [Tag]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TagFilter {
  AND: [TagFilter]
  OR: [TagFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type TagLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum TagOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Represents a tag entity for finding and organizing content easily.
        Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-concepts
"""
type TaxonomyConcept {
  id: String
}

interface _Node {
  _id: ID!
}

input cfComponentAuthorNestedFilter {
  AND: [cfComponentAuthorNestedFilter]
  OR: [cfComponentAuthorNestedFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

input cfComponentSeoNestedFilter {
  AND: [cfComponentSeoNestedFilter]
  OR: [cfComponentSeoNestedFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

input cfPageBlogPostNestedFilter {
  AND: [cfPageBlogPostNestedFilter]
  OR: [cfPageBlogPostNestedFilter]
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedBlogPostsCollection_exists: Boolean
  seoFields_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfQuizAnswerNestedFilter {
  AND: [cfQuizAnswerNestedFilter]
  OR: [cfQuizAnswerNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  pdfLongText: String
  pdfLongText_contains: String
  pdfLongText_exists: Boolean
  pdfLongText_in: [String]
  pdfLongText_not: String
  pdfLongText_not_contains: String
  pdfLongText_not_in: [String]
  pdfText_contains: String
  pdfText_exists: Boolean
  pdfText_not_contains: String
  sys: SysFilter
  text: String
  text_contains: String
  text_exists: Boolean
  text_in: [String]
  text_not: String
  text_not_contains: String
  text_not_in: [String]
  value: String
  value_contains: String
  value_exists: Boolean
  value_in: [String]
  value_not: String
  value_not_contains: String
  value_not_in: [String]
}